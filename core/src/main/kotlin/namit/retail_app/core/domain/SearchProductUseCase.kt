package namit.retail_app.core.domainimport android.util.Logimport namit.retail_app.core.data.entity.SearchResultModelimport namit.retail_app.core.data.repository.ProductRepositoryimport namit.retail_app.core.utils.UseCaseResultinterface SearchProductUseCase {    suspend fun execute(keywords: String, merchantId: String, page: Int): UseCaseResult<SearchResultModel>}class SearchProductUseCaseImpl(    private val productRepository: ProductRepository) : SearchProductUseCase {    companion object {        private val TAG = SearchProductUseCaseImpl::class.java.simpleName    }    override suspend fun execute(keywords: String, merchantId: String, page: Int): UseCaseResult<SearchResultModel> {        return try {            val searchProductResult = productRepository.searchProduct(keywords, merchantId, page)            UseCaseResult.Success(searchProductResult)        } catch (e: Exception) {            Log.e(TAG, "Exception", e)            UseCaseResult.Error(e)        }    }}