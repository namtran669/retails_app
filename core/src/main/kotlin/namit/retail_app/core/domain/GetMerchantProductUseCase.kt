package namit.retail_app.core.domainimport android.util.Logimport namit.retail_app.core.data.entity.ProductItemimport namit.retail_app.core.data.repository.ProductRepositoryimport namit.retail_app.core.utils.UseCaseResultinterface GetMerchantProductUseCase {    suspend fun execute(merchantId: String, page: Int): UseCaseResult<List<ProductItem>>}class GetMerchantProductUseCaseImpl(    private val productRepository: ProductRepository) : GetMerchantProductUseCase {    companion object {        val TAG = GetMerchantProductUseCaseImpl::class.java.simpleName        const val ERROR_EMPTY_PRODUCT_CASE = "ERROR_EMPTY_PRODUCT_CASE"    }    override suspend fun execute(merchantId: String, page: Int): UseCaseResult<List<ProductItem>> {        return try {            val products = productRepository.getProductList(merchantId, page)            if (products.isNotEmpty()) {                UseCaseResult.Success(products)            } else {                UseCaseResult.Error(Throwable(ERROR_EMPTY_PRODUCT_CASE))            }        } catch (e: Exception) {            Log.e(TAG, e.message, e)            UseCaseResult.Error(e)        }    }}