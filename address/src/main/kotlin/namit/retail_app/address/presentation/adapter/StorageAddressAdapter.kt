package namit.retail_app.address.presentation.adapterimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.core.content.ContextCompatimport androidx.recyclerview.widget.RecyclerViewimport namit.retail_app.address.Rimport namit.retail_app.core.data.entity.AddressListTypeimport namit.retail_app.core.data.entity.AddressModelimport kotlinx.android.synthetic.main.item_storage_address.view.*import kotlin.properties.Delegatesclass StorageAddressAdapter : RecyclerView.Adapter<StorageAddressAdapter.StorageAddressHolder>() {    var items by Delegates.observable(listOf<AddressModel>()) { _, _, _ ->        notifyDataSetChanged()    }    var onItemSelected: (address: AddressModel) -> Unit = {}    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): StorageAddressHolder {        val view = LayoutInflater.from(parent.context).inflate(R.layout.item_storage_address, parent, false)        return StorageAddressHolder(view)    }    override fun getItemCount(): Int {        return items.size    }    override fun onBindViewHolder(holder: StorageAddressHolder, position: Int) {        holder.bind(items[position])    }    inner class StorageAddressHolder(view: View) : RecyclerView.ViewHolder(view) {        init {            itemView.setOnClickListener {                if (adapterPosition != RecyclerView.NO_POSITION) {                    onItemSelected(items[adapterPosition])                }            }        }        fun bind(address: AddressModel) {            when(address.type) {                AddressListType.HOME -> {                    itemView.apply {                        titleAddressTextView.text = context.getString(R.string.home)                        iconAddressImageView.setImageResource(R.drawable.ic_home_select)                        titleAddressTextView.setTextColor(                            ContextCompat.getColor(                                context,                                R.color.dodgerBlue                            )                        )                    }                }                AddressListType.WORK -> {                    itemView.apply {                        titleAddressTextView.text = context.getString(R.string.work)                        iconAddressImageView.setImageResource(R.drawable.ic_work_location_blue)                        titleAddressTextView.setTextColor(                            ContextCompat.getColor(                                context,                                R.color.dodgerBlue                            )                        )                    }                }                AddressListType.OTHER -> {                    itemView.apply {                        titleAddressTextView.text = address.name ?: address.landMark ?: address.address                        iconAddressImageView.setImageResource(R.drawable.ic_others_location_blue)                        titleAddressTextView.setTextColor(                            ContextCompat.getColor(                                context,                                R.color.dodgerBlue                            )                        )                    }                }            }        }    }}