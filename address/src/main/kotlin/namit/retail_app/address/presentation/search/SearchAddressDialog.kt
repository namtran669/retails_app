package namit.retail_app.address.presentation.searchimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.lifecycle.Observerimport namit.retail_app.address.Rimport namit.retail_app.address.presentation.adapter.SearchAddressAdapterimport namit.retail_app.core.data.entity.AddressSearchModelimport namit.retail_app.core.extension.afterTextChangedimport namit.retail_app.core.presentation.base.BaseFullScreenDialogimport kotlinx.android.synthetic.main.dialog_auto_complete_search.*import org.koin.android.viewmodel.ext.android.viewModelclass SearchAddressDialog : BaseFullScreenDialog() {    companion object {        val TAG = SearchAddressDialog::class.java.simpleName        fun newInstance(): SearchAddressDialog {            return SearchAddressDialog()        }    }    var onLocationSelected: (address: AddressSearchModel) -> Unit = {}    private val addressSearchAdapter = SearchAddressAdapter()    private val locationViewModel: SearchLocationViewModel by viewModel()    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View? {        return LayoutInflater.from(context).inflate(R.layout.dialog_auto_complete_search, null)    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        initView()        bindViewModel()    }    private fun initView() {        searchResultRecyclerView.apply {            addressSearchAdapter.onItemSelected = {                onLocationSelected.invoke(it)                dismiss()            }            adapter = addressSearchAdapter        }        locationSearchEditText.afterTextChanged {            locationViewModel.searchAddress(it)        }        searchCancelImageView.setOnClickListener {            dismiss()        }    }    private fun bindViewModel() {       locationViewModel.addressSearchLiveData.observe(viewLifecycleOwner, Observer {           addressSearchAdapter.items = it       })    }}